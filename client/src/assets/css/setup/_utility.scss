.d-flex {
  display: flex;

  &.flex-column {
    flex-direction: column;
  }
  &.flex-wrap {
    flex-wrap: wrap;
  }
  &.justify-space-between {
    justify-content: space-between;
  }
  &.justify-center {
    justify-content: center;
  }
  &.justify-end {
    justify-content: flex-end;
  }
}
.d-grid {
  display: grid;
  &.align-center {
    align-items: center;
  }
  &.justify-center {
    justify-items: center;
  }
}

.referral {
  @include flex(space-between, row);
  &__radio {
    @include flex(flex-start, row);
    align-items: flex-start;
    margin-bottom: 30px;
  }
  .input-con {
    width: 178px;
  }
}

.products {
  @include flex(center, column);
  gap: 50px;
}
@include breakpoint(lg) {
  .products {
    @include flex(center, row);
  }
}
.input-field {
  width: 100%;
  p {
    font-size: 14px;
    color: picker(primary, flux-white);
    font-weight: fontWeight(medium);
    margin-bottom: 13px;
  }
}
.input-con {
  width: 100%;
  height: 50px;
  background-color: picker(secondary, darker);
  @include flex(flex-start, row);
  margin-bottom: 24px;
  padding: 0 20px;
  border-radius: 5px;
  input {
    background-color: transparent;
    border: none;
    font-size: 14px;
    outline: none;
    width: 100%;
    color: picker(primary, flux-white);
    @include font(fontFamily(DM-Sans), fontWeight(regular));
    ::placeholder {
      color: picker(secondary, dark);
    }
  }
}
.title {
  @include flex(space-evenly, row);
  &-ls {
    width: 1px;
    height: 121px;
    background: linear-gradient(180deg, rgba(39, 39, 39, 0.3) 0%, #272727 100%);
    transform: rotate(-90deg);
  }
  &-rs {
    width: 1px;
    height: 121px;
    background: linear-gradient(180deg, #272727 0%, rgba(39, 39, 39, 0.3) 100%);
    transform: rotate(-90deg);
  }
  h4 {
    color: picker(primary, flux-blue);
  }
}

select {
  color: picker(primary, flux-white);
  @include font(fontFamily(DM-Sans), fontWeight(regular));
  background-color: unset;
  outline: none;
  border: unset;
  border-radius: 5px;
}

@include breakpoint(lg) {
  .input-con {
    width: 100%;
  }
}

// .container {
//   width: 90%;
//   margin: 0 auto;
// }

.clickable {
  cursor: pointer;
}

.transition {
  transition-duration: 0.8s;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.55, 0, 0.1, 1);
}

.btn {
  padding: 10px 21px;
  cursor: pointer;
  @include font(fontFamily(DM-Sans), fontWeight(medium));
  @include flex(center, row);
  border: unset;
  border-radius: 50px;
  outline: unset;
  &--big {
    padding: 20px 41px !important;
  }
}

::-webkit-scrollbar {
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  //   background: $sinzu-primary;
  width: 2px !important;
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  //   background: $sinzu-accent;
}

/** 
    * generate padding and margin utility classes
    * example: mt-14, pt-14, mt-sm-14 or pt-sm-14
    */
@each $prop, $letter in (margin: m, padding: p) {
  @for $space from 0 to 19 {
    $size: #{$space * $space-multiplier}px;
    .#{$letter}x-#{$space} {
      #{$prop}-left: $size;
      #{$prop}-right: $size;
    }
    .#{$letter}y-#{$space} {
      #{$prop}-top: $size;
      #{$prop}-bottom: $size;
    }
    .#{$letter}a-#{$space} {
      #{$prop}: $size;
    }
    @each $direction, $d in $xy-border {
      .#{$letter}#{$d}-#{$space} {
        #{$prop}-#{$direction}: #{$size};
      }
      @each $break, $breakpoint in $breakpoints {
        .#{$letter}#{$d}-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-#{$direction}: #{$size};
          }
        }
        .#{$letter}x-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-left: $size;
            #{$prop}-right: $size;
          }
        }
        .#{$letter}y-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-top: $size;
            #{$prop}-bottom: $size;
          }
        }
      }
      @each $break, $breakpoint in $breakpointsAndDown {
        .#{$letter}#{$d}-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-#{$direction}: #{$size};
          }
        }
        .#{$letter}x-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-left: $size;
            #{$prop}-right: $size;
          }
        }
        .#{$letter}y-#{$break}-#{$space} {
          @include breakpoint($break) {
            #{$prop}-top: $size;
            #{$prop}-bottom: $size;
          }
        }
      }
    }
  }
}
