{"version":3,"sources":["components/products/product.jsx","assets/image.js","pages/browse.jsx","pages/errors/404.jsx","components/home/landing.jsx","pages/home.jsx","helpers/schemas/formSchema.js","helpers/API.js","service/api.js","constant/index.jsx","helpers/alert.js","actions/conflux.action.js","components/products/product-detail.jsx","helpers/helpers.js","routes.jsx","pages/Product-view.jsx","components/layouts/navbar.jsx","components/layouts/footer.jsx","components/layouts/content.jsx","App.jsx","reducers/confluxReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.jsx","assets/img/saly13.png","assets/img/airtel.svg","assets/img/mtn.webp","assets/img/glo.webp"],"names":["Product","id","name","image","reward","isFeatured","to","className","style","background","padding","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","size","salty13","saImg","MTN","mtnLogo","Airtel","airtelLogo","GLOLogo","gloLogo","products","filter","Products","map","by","i","key","p","Page404","height","textAlign","fontSize","marginBottom","marginTop","Landing","src","alt","Home","productSchema","Yup","shape","product","required","customer","max","amount","note","API","axios","create","responseType","interceptors","response","use","datarespo","data","Promise","resolve","error","message","errMessage","reject","updateTx","txId","status","txHash","txData","post","confluxConstants","AlertResp","title","text","icon","confirmButtonText","Swal","fire","backdrop","connectPortal","setSubmitting","dispatch","a","type","user","request","window","conflux","enable","send","console","log","length","success","account","isPortalInstalled","allowed","Boolean","isConfluxPortal","method","accounts","selectedAddress","restoreSession","sendTx","params","from","gas","gasPrice","value","amountCFXUnit","networkVersion","then","result","_id","JSON","stringify","catch","ProductDetail","state","useSelector","useDispatch","code","useFormik","initialValues","validationSchema","onSubmit","values","createTx","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","body","r","confluxAction","placeholder","onBlur","onChange","color","opacity","disabled","confluxInstalled","connected","routes","publicRoutes","path","component","exact","RParams","useParams","history","useHistory","useState","loading","setLoading","setProduct","useEffect","pr","push","Navbar","onClick","links","Footer","link","href","m","createBrowserHistory","Loading","React","memo","on","Suspense","fallback","route","idx","redirect","render","props","App","overflowX","initialState","connecting","combineReducers","action","localStorage","setItem","store","createStore","rootReducer","applyMiddleware","thunk","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d3f49930.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// img =\"https://d1ralsognjng37.cloudfront.net/8255c295-44b5-4242-90c5-999645166eb3.jpeg\";\nconst Product = ({id, name, image, reward, isFeatured}) => {\n    return(\n        <Link to={`/product/${id}`}>\n            <section className=\"product\" style={{background:'white', padding: '0 20px'}}>\n            <div className=\"product__img\" style={{ backgroundImage: `url(${image})`, backgroundRepeat:'no-repeat', backgroundSize:'contain', backgroundPosition:'center' }}>\n                <div className=\"product__img-tags\">\n                {isFeatured && <div className=\"product__img-tags__feat\"> Featured</div>}\n                {reward && <div className=\"product__img-tags__rewards\"><ph-star size=\"16\" className=\"mr-2\" />{reward}% Rewards</div>}\n                </div>\n                <div className=\"product__img-name\">\n                {name}\n                </div>\n                {/* <img src={image} alt=\"product\" /> */}\n            </div>\n            </section>\n        </Link>\n    );\n}\n\nexport default Product;","import saImg from './img/saly13.png';\nimport airtelLogo from './img/airtel.svg';\nimport mtnLogo from './img/mtn.webp';\nimport gloLogo from './img/glo.webp';\n\nexport const salty13 = saImg;\nexport const MTN = mtnLogo;\nexport const Airtel = airtelLogo;\nexport const GLOLogo = gloLogo;","import React from  'react';\nimport Product from '../components/products/product';\nimport { Airtel, GLOLogo, MTN } from '../assets/image';\n\nconst products = [\n    {id: 1, name: 'MTN VTU top Up', image: MTN},\n    {id: 2, name: 'Airtel Nigeria', image: Airtel},\n    {id:3, name: 'Glo Nigeria', image: GLOLogo },\n];\nconst pretext = 'LIVE ON CRYPTO',\nherotext = 'Browse Products',\nfilter = [\n  'All Items',\n  'Entertainment',\n  'Gaming',\n  'Travel',\n  'Prepaid Phones'\n];\n\nconst Products = () => {\n    return (\n        <section className=\"browse\">\n          <div className=\"container\">\n            <div className=\"browse__copy\">\n              <p className=\"browse__copy-pretext\">\n                { pretext }\n              </p>\n              <p className=\"browse__copy-herotext\">\n                { herotext }\n              </p>\n            </div>\n            <div className=\"filter\">\n              <div className=\"filter__ls\">\n                <select>\n                  <option>Recent</option>\n                </select>\n                <select>\n                  <option>Nigeria</option>\n                </select>\n                <div className=\"clear\">\n                  Clear Filter\n                </div>\n              </div>\n              <div className=\"browse__filter\">\n                {filter.map((by, i) => <div key={i} className={`browse__filter-by mr-4 ${i === 0 ? `active` : ``}`}\n                >\n                  { by }\n                </div>)}\n              </div>\n            </div>\n            <div className=\"row mt-10\">\n              {products && products.map((p, i) => \n              <div key={i} className=\"col-md-4 col-lg-3 mb-3\">\n                <Product id={p.id} name={p.name} image={p.image} />\n              </div>)}\n            </div>\n          </div>\n        </section>\n    )\n}\n\nexport default Products;","import React from 'react';\n\nconst Page404 = () => {\n    return (  \n        <section className=\"landing\">    \n            <div className=\"container\" style={{ height: '50vh', textAlign:'center'}}>\n                <div className=\"row m-auto justify-content-center align-item-center\">\n                    <div className=\"col-6 text-center\">\n                        <h1 className=\"title\" style={{fontSize: '100px', marginBottom: 0}}>404</h1>\n                        <p className=\"description\" style={{fontSize: '30px', marginTop: 0}}>Page Not Found!!</p>   \n                    </div>                    \n                </div>                \n            </div>\n        </section>  \n    )\n}\nexport default Page404;","import React from 'react';\nimport { salty13 } from '../../assets/image';\n// import '../../assets/css/components/home/_landing.scss';\n\nconst pretext = 'LIVE ON CRYPTO',\nherotext = 'Make your daily payments with crypto',\ncaption = 'Buy gift cards for anything under the sun. No account necessary.'\n    \nconst Landing = () => {\n    return(\n      <section className=\"landing\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"landing__copy\">\n                <p className=\"landing__copy-pretext\">\n                  {pretext}\n                </p>\n                <p className=\"landing__copy-herotext\">\n                  { herotext }\n                </p>\n                <p className=\"landing__copy-caption\">\n                  { caption }\n                </p>\n                <div className=\"landing__copy-action\">\n                  <button className=\"landing__copy-action__buy\">\n                    Start buying\n                  </button>\n                  <button className=\"landing__copy-action__play ml-5\">\n                    \n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"landing__saly13\">\n                <img src={salty13} alt=\"home\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n}\n\nexport default Landing;\n","import React from 'react';\nimport { Airtel, GLOLogo, MTN } from '../assets/image';\nimport Landing from '../components/home/landing';\nimport Product from '../components/products/product';\nconst products = [\n    {id: 1, name: 'MTN VTU top Up', image: MTN},\n    {id: 2, name: 'Airtel Nigeria', image: Airtel},\n    {id:3, name: 'Glo Nigeria', image: GLOLogo },\n]\nconst Home = () => {\n    return (\n        <section>\n            <Landing/>\n            <div className=\"container\">\n                <section className=\"explore\">\n                    <div className=\"title\">\n                        <div className=\"title-ls\" />\n                        <h4>Top Products</h4>\n                        <div className=\"title-rs\" />\n                    </div>\n                </section>\n                <div className=\"row mt-10\">\n                    {products && products.map((p, i) => \n                        <div key={i} className=\"col-md-4 mb-3\">\n                            <Product id={p.id} name={p.name} image={p.image} />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default Home;","import * as Yup from 'yup';\n\nexport const productSchema = Yup.object().shape({\n    product: Yup.string()\n      .required('Please select a valid product'),\n    customer: Yup.string().required('Please Customer is required').max(11),\n    amount: Yup.number().required('Amount to Purchase is required'),\n    note: Yup.string()\n  });","import axios from 'axios';\n// import config from '../config';\n// import { handleResponse } from './response';\n\nconst API = axios.create({\n//   baseURL: config.apiUrl,\n  responseType: 'json',\n});\n\n// API.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n\nAPI.interceptors.response.use(\n  (response) => {\n    let datarespo = response.data;\n    // // console.log(response.data);\n    // datarespo.message = response.data.message ? response.data.message : 'Success';\n    return Promise.resolve(datarespo);\n  },\n  // (error) => handleResponse(error)\n  (error) => {\n    if (error.message === 'Network Error') {\n      const errorMessage = {\n        response: {\n          data: {\n            message:\n              'Network Error. Please check if you are connected to the internet.',\n          },\n        },\n      };\n    //   return handleResponse(errorMessage);\n      let errMessage = error.response.data.message || error.response.data.error;\n      return Promise.reject(errMessage);\n    }\n\n    // return handleResponse(error);\n    let errMessage = error.response.data.message || error.response.data.error;\n    return Promise.reject(errMessage);\n  }\n);\n\nexport default API;\n","import API from \"../helpers/API\"\n\nexport const newTx = (body) => {\n    return API.post('/v1/tx/create-order', body);\n};\n\nexport const updateTx = (txId, status, txHash, txData, error) => {\n    return API.post('/v1/tx/update-order', { txId, status, txHash, txData, error})\n}","export const confluxConstants = {\n    CONNECT_SUCCESS: 'CONNECT_SUCCESS',\n    CONNECT_LOADING: 'CONNECTING',\n    CONNECT_FAILED: 'CONNECT_FAILED',\n    CONNECT_NOT_ALLOWED: 'CONNECT_NOT_ALLOWED',\n    CONNECT_ALLOWED: 'CONNECT_ALLOWED'\n}\n  ","import Swal from \"sweetalert2\";\n\nexport const AlertResp = (title, text, icon, confirmButtonText) =>{\n    Swal.fire({\n      title,\n      text,\n      icon,\n      confirmButtonText,\n      padding: '3em',\n      background: '#eee',\n      backdrop: `rgba(0,0,123,0.4)`\n    });\n}","import { confluxConstants } from '../constant';\nimport { AlertResp } from '../helpers/alert';\nimport { updateTx } from '../service/api';\nconst allowedNetowrk = 1;\nconst adminAccount = 'cfxtest:aak2zfppgz9xe0w4tnfcts7cwamwv53e36hk1f8ceg';\nexport default {\n  connectPortal,\n  isPortalInstalled,\n  sendTx,\n  restoreSession\n};\n\nfunction connectPortal(setSubmitting) {\n  return async (dispatch) => {\n    // console.log('here');\n    dispatch(request());\n    await window.conflux.enable();\n    const conflux = await window.conflux.send(\"cfx_requestAccounts\");\n    console.log(conflux);\n    if(conflux && conflux.length > 0){\n      return dispatch(success({account:conflux}));\n    } else{\n      return dispatch(failure({error: conflux}))\n    }\n  };\n\n  function request(user) {\n    return { type:  confluxConstants.CONNECT_LOADING, user };\n  }\n  function success(user) {\n    return { type: confluxConstants.CONNECT_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: confluxConstants.CONNECT_FAILED, error };\n  }\n}\n\nfunction restoreSession(account){\n  return async (dispatch) => {\n    return dispatch(success({account}));\n  };\n  function success(user) {\n    return { type: confluxConstants.CONNECT_SUCCESS, user };\n  }\n}\n\nfunction isPortalInstalled(){\n  return async(dispatch) => {\n    console.log('coecty');\n    let allowed = Boolean(window.conflux && window.conflux.isConfluxPortal);\n    console.log(allowed);\n    if(!allowed) dispatch(failure({}));\n    if(allowed){\n      const accounts = await window.conflux.send({ method: 'cfx_accounts' })\n      console.log('acct===>', accounts, window.conflux.selectedAddress);\n      if(accounts && accounts.length > 0){\n        restoreSession(accounts);\n      }\n      dispatch(success({}));\n    }\n  };\n  function success(user) {\n    return { type: confluxConstants.CONNECT_ALLOWED, user };\n  }\n  function failure(error) {\n    return { type: confluxConstants.CONNECT_NOT_ALLOWED, error };\n  }\n}\n\nfunction sendTx(data, setSubmitting){\n  // const { acctRec, amount } = data;\n  const conflux = window.conflux;\n  console.log(data)\n  const accounts = conflux.selectedAddress\n  console.log(accounts);\n  const params = [\n    {\n      from: accounts,\n      to: adminAccount,\n      gas: \"0x76c0\",\n      gasPrice: \"0x9184e72a000\",\n      value: data.amountCFXUnit, \n      // value: \"3\"\n    },\n  ]\n  return async(dispatch) => {\n    if(accounts && conflux.networkVersion==allowedNetowrk){\n      window.conflux\n        .send(\"cfx_sendTransaction\", params)\n        .then(function (result) {\n          // The result varies by method, per the JSON RPC API.\n          // For example, this method will return a transaction hash on success.\n          console.log(result);\n          updateTx(data._id, 'success', result.txHash, JSON.stringify(result), 'null');\n          AlertResp('Transaction Successful', 'transaction sent successful', 'success', 'close');\n          setSubmitting(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n          updateTx(data._id, 'failed', 'null', 'null', JSON.stringify(error));\n          AlertResp('Transaction Failed', error.message, 'error', 'Close');\n          setSubmitting(false);\n          // Like a typical promise, returns an error on rejection.\n        })\n    }else{\n      // console.log(conflux.networkVersion, accounts);\n      AlertResp('Info', 'Please Switch to Test Network!!!', 'info', 'close');\n      setSubmitting(false);\n    }\n  }\n}","import React from 'react';\nimport { useFormik } from 'formik';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport { productSchema } from '../../helpers/schemas/formSchema';\nimport { newTx } from '../../service/api';\nimport confluxAction from '../../actions/conflux.action';\n\nconst ProductDetail = ({ product }) => {\n    const state = useSelector((state) => state.conflux);\n    const dispatch = useDispatch();\n    const { name, image, id, code, amount } = product;\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setSubmitting,\n      // resetForm,\n    } = useFormik({\n      initialValues: {\n        product: name,\n        customer: '',\n        amount: '',\n        note:''\n      },\n      validationSchema: productSchema,\n      onSubmit(values) {\n        //   console.log('valll===>',values);\n          return createTx(values);\n        }\n    });\n    console.log(state);\n    \n    const makePayment = (data) => {\n        // console.log('going...', data);\n        dispatch(confluxAction.sendTx(data, setSubmitting));\n    }\n\n    const createTx = async (values) => {\n        try{\n          let r = await newTx(values);\n            // console.log(r);\n            if(r.status=='success'){\n                return makePayment(r.data);  \n            }\n        }catch(err){\n            console.log(err);  \n        }\n    };\n\n    return (\n        <section className=\"row product-section\">\n            <div className=\"col-md-6\" style={{background:'white', padding: '0 20px'}}>\n                <div className=\"product__img\" style={{ backgroundImage: `url(${image})`, backgroundRepeat:'no-repeat', backgroundSize:'contain', backgroundPosition:'center' }}>\n                {/* <img src={image} /> */}\n                </div>\n            </div>\n            <div className=\"col-md-6\">\n                <div className=\"product__details\">\n                    <div className=\"product__details-title\">\n                        <h4>{name}</h4>\n                        <button><ph-heart /></button>\n                    </div>\n                    <div className=\"product__details-content\">\n                        Use CFX to pay buy {name} Instant delivery.\n                        No account required. Start living on crypto!\n                    </div>\n\n                    <form onSubmit={handleSubmit}>\n                        {/* <ul className=\"product__details-prices mt-10\">\n                            {[1,2,3,4,5].map((price, i) => \n                            <li key={i}>\n                                <input type=\"radio\" className=\"mr-2\"/>\n                                <div className=\"product__details-prices__price\">\n                                    <span>5000-V-Bucks</span>\n                                    <span className=\"value\">0.00071487 USD</span>\n                                </div>\n                            </li>)}\n                        </ul> */}\n                        <div className=\"product__details-prices mt-10\">\n                            <div className=\"input-field\">\n                                <p>Customer</p>\n                                <div className=\"input-con\">\n                                    <input type=\"text\" placeholder=\"customer\"\n                                        name=\"customer\"\n                                        value={values.customer}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        />\n                                </div>\n                                {errors.customer && touched.customer ? (\n                                <>\n                                    <p style={{color:'red', opacity:0.7}}>*{errors.customer}</p>\n                                </>\n                                ) : null}\n                            </div>\n                            <div className=\"input-field\">\n                                <p>Amount</p>\n                                <div className=\"input-con\">\n                                    <input name=\"amount\" type=\"number\" placeholder=\"500\" \n                                        value={values.amount}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}/>\n                                </div>\n                                {errors.amount && touched.amount ? (\n                                <>\n                                    <p style={{color:'red', opacity:0.7}}>*{errors.amount}</p>\n                                </>\n                                ) : null}\n                            </div>\n                            <div className=\"input-field\">\n                                <p>Note</p>\n                                <div className=\"input-con\">\n                                    <input name=\"note\" type=\"text\" placeholder=\"Buying airtime for john doe\" \n                                        value={values.note}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}/>\n                                </div>\n                                {errors.note && touched.note ? (\n                                <>\n                                    <p style={{color:'red', opacity:0.7}}>*{errors.note}</p>\n                                </>\n                                ) : null}\n                            </div>\n                        </div>\n                        <div className=\"buttons\">\n                            <button className=\"add-cart mt-10 btn--big\" type=\"submit\" disabled={isSubmitting || !state.confluxInstalled } >\n                                {!state.confluxInstalled ? 'Please Install Conflux Portal to Purchase': !state.connected ? 'Please Connect to Conflux Portal' : !isSubmitting ? 'Purchase' : 'Please Wait...'}\n                                {/* <ph-shopping-cart-simple className=\"ml-5\" size=\"16\" /> */}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default ProductDetail;","import { Airtel, GLOLogo, MTN } from '../assets/image';\n\nexport const products = [\n    {id: 1, name: 'MTN VTU top Up', image: MTN},\n    {id: 2, name: 'Airtel Nigeria', image: Airtel},\n    {id:3, name: 'Glo Nigeria', image: GLOLogo },\n];","import Products from \"./pages/browse\";\nimport Page404 from \"./pages/errors/404\";\nimport Home from \"./pages/home\";\nimport ProductView from \"./pages/Product-view\";\n\nconst publicRoutes = [\n  { path: '/', name: 'Home', component: Home, exact:true},\n  { path: '/browse', name: 'Browse Products', component: Products, exact:true},\n  { path: '/product/:id', name: 'Buy product', component: ProductView, exact:true},\n  { path: '**', name: '404', component: Page404, }\n//   { path: 'create-account', name: 'Create Account', component: CreateAccount },\n];\n\nconst routes = {\n  publicRoutes,\n};\n\nexport default routes;\n","import React, { useEffect, useState} from 'react';\nimport ProductDetail from '../components/products/product-detail';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { products } from '../helpers/helpers';\n\nconst ProductView = () => {\n    const RParams = useParams();\n    let history = useHistory();\n    const [ loading, setLoading] = useState(true);\n    const [ product, setProduct] = useState(null);\n    useEffect(() => {\n      let id = RParams.id;\n        const pr = products.filter(p=>p.id==id)[0];\n        if(pr){\n          console.log(id, pr);  \n          setProduct(pr)\n          setLoading(false);\n        }else{\n            history.push('/404');\n            console.log('product not existing...')\n        }        \n    },[]);\n\n    return (\n        <section className=\"productView mt-10\">\n            <div className=\"container mt-10\">\n                {!loading && product && <ProductDetail product={product}/> }\n            </div>\n        </section>\n    )\n}\nexport default ProductView;","import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport confluxAction from '../../actions/conflux.action';\n// const connected =false;\n\nconst Navbar = () => {\n  const state = useSelector((state) => state.conflux);\n  const dispatch = useDispatch();\n  // const [connected, setConnected] = useState(false);\n\n  useEffect(()=>{\n    // check\n  },[state]);\n  // console.log(state);\n\n  const ConnectConflux = () => {\n    // console.log(\"loading...\");\n    dispatch(confluxAction.connectPortal());\n  }\n\n  return (\n    <div className=\"navbar\">\n    <div className=\"container d-flex justify-content-between align-items-center\">\n      <Link to=\"/\">\n        <div className=\"navbar__logo\">\n          fluxgift.\n        </div>\n      </Link>\n      {/* <div v-if=\"sidebarShow\" className=\"mask\" @click=\"sidebarShow = false\" /> */}\n      <div className=\"navbar__links\">\n        <div className=\"navbar__links-search\">\n          {/* <ph-magnifying-glass /> */}\n          <div className=\"input-field\">\n            <div className=\"input-con\">\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n              />\n            </div>\n          </div>\n        </div>\n        <ul>\n          <li>\n            <Link to=\"/browse\">\n              Browse Products\n            </Link>\n          </li>\n          <li>\n            {state && state.connected ? <Link to=\"/account\">\n              Connected\n            </Link> :\n            <a onClick={ConnectConflux}>\n              <button>Connect</button>\n            </a>}\n          </li>         \n        </ul>\n      </div>\n      <div className=\"navbar__rs\">\n        <div className=\"navbar__rs-menu\">\n            {/* <hamburger /> */}\n        </div>\n      </div>\n    </div></div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst links = [\n    {\n      title: 'Questions?',\n      links: [\n        'FAQ',\n        'Contact Form',\n        'Product Request',\n        'Reviews',\n        'Video Tutorials',\n        'support@fluxgift.com'\n      ]\n    },\n    {\n      title: 'Social',\n      links: [\n        'Blog',\n        'Twitter',\n        'Telegram',\n        'Facebook',\n        'Reddit',\n        'Instagram',\n        'Enter Newsletter',\n        'Press Resources'\n      ]\n    },\n    {\n      title: 'Live on crypto',\n      links: [\n        'Refill phones',\n        'Lightning',\n        'Gaming',\n        'Travel',\n        'Entertainment',\n        'Shopping',\n        'Rewards'\n      ]\n    },\n    {\n      title: 'Partners',\n      links: ['SinzuApp', 'Refer-a-friend', 'Careers']\n    },\n    {\n      title: 'Legal',\n      links: ['Terms and Condition', 'Privacy Policy']\n    }\n]\n\nconst Footer = () => {\n    return (\n    <section className=\"footer\">\n        <div className=\"container\">\n            <div className=\"alignment\">\n            <div className=\"footer__copy\">\n                <h4>fluxgift.</h4>\n                <p className=\"mt-10\">\n                Buy gift cards for anything under the sun. No account necessary.\n                </p>\n                <p className=\"made\">\n                2021 Fluxgift. All rights reserved\n                </p>\n            </div>\n            <div className=\"footer__links\">\n            {links && links.map((link, i) => \n                <ul key={i} className=\"footer__links-set\">\n                    <li className=\"footer__links-set__head\">\n                        {link.title }\n                    </li>\n                    {link.links.map((href, m) => \n                    <li key={m} className=\"mb-6 clickable\">\n                        { href }\n                    </li>)}\n                </ul>\n            )}\n            </div>\n            </div>\n        </div>\n    </section>\n    )\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\n// import userAction from '../actions/userAction';\nimport routes from '../../routes';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { createBrowserHistory } from 'history';\n// import Page404 from '../../pages/errors/404';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport { useDispatch } from 'react-redux';\nimport confluxAction from '../../actions/conflux.action';\n\nexport const history = createBrowserHistory();\n\nconst Loading = () => {\n  return <h3 className=\"text-center\">loading....</h3>;\n};\n\nconst Content = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(confluxAction.isPortalInstalled());\n    }, []);\n    useEffect(()=>{\n        window.conflux.on('accountsChanged', function (accounts) {\n            // Time to reload your interface with accounts[0]!\n            if(accounts && accounts.length > 0){\n                console.log('acct-change', accounts);\n                dispatch(confluxAction.restoreSession(accounts));\n            }\n          })\n    })\n  return (\n    <>\n    <Router history={history}>\n        <Navbar />\n        <React.Suspense fallback={Loading}>\n            <Switch>\n            {routes.publicRoutes.map((route, idx) => {\n                if (route.redirect) {\n                    return <Redirect to={route.redirect} key={idx} />;\n                }\n                return (\n                    route.component && (\n                    <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={(props) => (\n                        <div>\n                            <route.component {...props} />\n                        </div>\n                        )}\n                    />\n                    )\n                );\n            })}\n            </Switch>\n        </React.Suspense>\n        <Footer/>\n    </Router>\n    </>\n  );\n};\n\nexport default React.memo(Content);\nexport const PageLoading = Loading;","import React from 'react';\nimport './assets/css/styles.scss';\nimport Content from './components/layouts/content';\n\nfunction App() {\n  return (\n    <div className=\"__layout\">\n      <div style={{overflowX:'hidden'}}>\n          <Content />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// import confluxService from '../service/conflux';\nimport { confluxConstants } from '../constant';\n\nvar initialState = {\n  confluxInstalled: false,\n  connected: false,\n  connecting: false,\n  account: null\n}\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case confluxConstants.CONNECT_SUCCESS:\n      // console.log(action);\n      localStorage.setItem('account', action.user.account);\n      return {\n        ...state,\n        connected:true,\n        confluxInstalled:true,\n        account: action.user.account\n      }\n    case confluxConstants.CONNECT_LOADING:\n        return{\n            ...state,\n            connecting: true,\n            connected: false,\n        }\n    case confluxConstants.CONNECT_FAILED:\n        return{\n            ...initialState\n        }\n    case confluxConstants.CONNECT_ALLOWED:\n      return{\n        ...state,\n        confluxInstalled: true\n      }\n    case confluxConstants.CONNECT_NOT_ALLOWED:\n      return{\n        ...state,\n        confluxInstalled: false\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport confluxReducer from './confluxReducer';\n\nexport default combineReducers({\n   conflux: confluxReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n// import { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers/rootReducer'\n\nfunction configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk))\n}\n\nconst store = configureStore\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/saly13.87a98bc1.png\";","module.exports = __webpack_public_path__ + \"static/media/airtel.e5774c4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mtn.d7d04a40.webp\";","module.exports = __webpack_public_path__ + \"static/media/glo.22fd4081.webp\";"],"sourceRoot":""}